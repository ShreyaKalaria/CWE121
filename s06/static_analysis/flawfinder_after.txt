Flawfinder version 2.0.8, (C) 2001-2017 David A. Wheeler.
Number of rules (primarily dangerous function names) in C/C++ ruleset: 223
decomp/Decompiled.c:26:  [4] (format) printf:
  If format strings can be influenced by an attacker, they can be exploited
  (CWE-134). Use a constant for the format specification.
int printf(char *__format,...)
decomp/Decompiled.c:50:  [4] (format) snprintf:
  If format strings can be influenced by an attacker, they can be exploited,
  and note that sprintf variations do not always \0-terminate (CWE-134). Use
  a constant for the format specification.
int snprintf(char *__s,size_t __maxlen,char *__format,...)
decomp/Decompiled.c:219:  [4] (format) wprintf:
  If format strings can be influenced by an attacker, they can be exploited
  (CWE-134). Use a constant for the format specification.
int wprintf(wchar_t *__format,...)
decomp/Decompiled.c:50961:  [4] (format) printf:
  If format strings can be influenced by an attacker, they can be exploited
  (CWE-134). Use a constant for the format specification.
  printf((char *)(double)fParm1,&DAT_0044be2d);
decomp/Decompiled.c:51030:  [4] (format) printf:
  If format strings can be influenced by an attacker, they can be exploited
  (CWE-134). Use a constant for the format specification.
  printf(pcParm1,&DAT_0044be4a);
decomp/Decompiled.c:239:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
void srand(uint __seed)
decomp/Decompiled.c:401:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
  srand((uint)tVar1);
decomp/Decompiled.c:309:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
void * memcpy(void *__dest,void *__src,size_t __n)
decomp/Decompiled.c:2090:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:2124:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:2158:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:2635:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:2671:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:2705:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:2748:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:2786:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:3264:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:3303:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:3415:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_58,local_18,__n);
decomp/Decompiled.c:3446:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_58,local_18,__n);
decomp/Decompiled.c:3827:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:3854:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:3995:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:4035:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:4061:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:4078:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:4095:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:4112:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:4129:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:4146:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:4256:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [112];
decomp/Decompiled.c:4295:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [112];
decomp/Decompiled.c:5092:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:5111:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:5128:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:5150:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:5167:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:5186:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:5539:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:5580:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:5619:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:6063:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6105:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6145:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6172:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:6208:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:6247:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:7011:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:7045:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:7086:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:7127:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:7171:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:7459:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:7495:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:7534:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:7669:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:7688:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:7705:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:7727:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:7744:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:7763:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:7833:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:7884:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:7931:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:7975:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:8011:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:8050:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:8129:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:8165:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:8201:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:8792:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:8828:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:8862:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:9078:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:9114:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:9153:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:9490:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:9521:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:10267:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:10294:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:10750:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:10777:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:11641:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:11684:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:11730:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:12293:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:12327:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:12361:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:12679:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:12710:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:13230:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:13266:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:13305:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:13360:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:13387:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:13630:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:13647:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:13664:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:13681:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:13982:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [112];
decomp/Decompiled.c:14020:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [112];
decomp/Decompiled.c:14066:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:14100:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:14274:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:14310:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:14349:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:14454:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [104];
decomp/Decompiled.c:14499:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [104];
decomp/Decompiled.c:14638:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:14684:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:14892:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:14909:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:14928:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:14945:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:14962:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:14979:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:15133:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:15174:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:15218:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:15675:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:15711:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:15745:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:15787:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_a8 [112];
decomp/Decompiled.c:15830:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_a8 [112];
decomp/Decompiled.c:15907:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:15956:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:15999:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16036:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:16083:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:16877:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack128 + 1,local_30,__n,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16921:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack128 + 1,local_30,__n,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16997:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:17026:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:17457:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:17493:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:17532:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:17878:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [112];
decomp/Decompiled.c:17899:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_d8,local_18,__n);
decomp/Decompiled.c:17916:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [112];
decomp/Decompiled.c:17937:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_d8,local_18,__n);
decomp/Decompiled.c:18367:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:18394:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:18499:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [112];
decomp/Decompiled.c:18538:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [112];
decomp/Decompiled.c:18832:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:18866:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:18900:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:19200:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:19234:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:19410:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19450:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19939:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:19975:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:20014:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:20108:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:20150:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:20423:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_58,local_18,__n);
decomp/Decompiled.c:20454:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_58,local_18,__n);
decomp/Decompiled.c:20488:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:20507:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:20524:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:20546:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:20563:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:20582:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:20646:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [104];
decomp/Decompiled.c:20672:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_d8,local_28,__n);
decomp/Decompiled.c:20691:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [104];
decomp/Decompiled.c:20717:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_d8,local_28,__n);
decomp/Decompiled.c:20850:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:20884:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:21098:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:21127:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:21247:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:21285:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:21326:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:21372:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:21406:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:21440:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:21546:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:21587:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:21631:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:21966:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:21983:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:22002:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:22019:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:22036:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:22053:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:22079:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:22100:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_c8,local_20,__n);
decomp/Decompiled.c:22117:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:22138:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_c8,local_20,__n);
decomp/Decompiled.c:22163:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:22199:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:22238:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:22406:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:22440:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:22688:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:22724:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:22758:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:22801:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:22837:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:22871:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:23631:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_a8 [104];
decomp/Decompiled.c:23681:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_a8 [104];
decomp/Decompiled.c:23753:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:23791:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:23832:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:24146:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:24187:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:24226:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:24356:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack144 + 1,local_40,__n,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:24407:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack144 + 1,local_40,__n,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:24514:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:24541:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:24586:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:24615:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:24769:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [104];
decomp/Decompiled.c:24812:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [104];
decomp/Decompiled.c:25289:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [112];
decomp/Decompiled.c:25327:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [112];
decomp/Decompiled.c:25443:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25485:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25525:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25578:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack128 + 1,local_38,__n,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25622:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack128 + 1,local_38,__n,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25792:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [112];
decomp/Decompiled.c:25831:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [112];
decomp/Decompiled.c:25988:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:26024:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:26063:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:26589:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:26637:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:26682:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:26989:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:27006:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:27023:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:27040:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:27778:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27822:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27866:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:28011:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:28047:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:28086:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:28130:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:28171:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:28215:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:28389:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:28425:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:28464:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:28844:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:28864:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:28882:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:28905:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:28923:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:28943:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:28969:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:28986:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:29003:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:29020:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:29037:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:29054:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:29105:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:29154:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:29197:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:29710:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:29749:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:29788:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:30316:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:30333:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:30350:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:30367:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:30604:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:30631:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:30738:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30794:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30847:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30896:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30936:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30976:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:31264:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:31311:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:31696:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:31716:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:31734:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:31757:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:31775:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:31795:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:31958:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32010:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32147:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:32190:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:32236:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:32287:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:32326:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:32365:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:32960:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:33001:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:33045:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:33126:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33177:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33224:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33273:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33313:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33353:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33583:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:33622:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:33734:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:33768:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:33802:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:33870:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33919:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33962:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34051:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:34085:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:34693:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:34732:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:34802:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34842:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34894:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:34921:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:35051:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:35075:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:35093:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:35117:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:35142:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:35178:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:35217:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:35773:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:35809:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:35848:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:35941:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:35977:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:36016:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:36394:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:36423:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:36608:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:36657:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:36700:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:36861:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:36897:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:36931:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:36974:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:37012:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:37471:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:37523:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:38304:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:38338:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:38372:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:38659:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:38693:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:38727:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:38880:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [112];
decomp/Decompiled.c:38902:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_c8,local_18,__n);
decomp/Decompiled.c:38919:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [112];
decomp/Decompiled.c:38941:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_c8,local_18,__n);
decomp/Decompiled.c:39038:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:39081:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:39248:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:39267:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:39284:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:39306:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:39323:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:39342:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:39540:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:39569:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:40376:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:40403:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:40653:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [112];
decomp/Decompiled.c:40691:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [112];
decomp/Decompiled.c:40754:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:40789:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:41082:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:41101:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:41118:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:41140:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:41157:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:41176:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:41203:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:41245:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:41395:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [112];
decomp/Decompiled.c:41439:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [112];
decomp/Decompiled.c:41492:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:41528:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:41567:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:41613:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:41655:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:42071:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42120:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42163:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42414:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_30,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42459:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_30,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42808:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:42857:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:42904:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:42940:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:42979:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:43227:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:43265:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:43306:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:43352:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:43386:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:43420:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:43478:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:43516:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:43557:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:43978:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:44012:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:44046:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:44590:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:44624:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:44665:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:44706:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:44750:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:45058:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:45096:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:45137:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:45305:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45348:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45561:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45610:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45653:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45801:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:45839:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:45880:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:46731:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:46748:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:46765:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:46782:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:46799:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:46816:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:47240:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:47282:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:47325:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:47361:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:47400:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:47804:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:47838:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:48163:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:48182:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:48199:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:48221:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:48238:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:48257:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_b8,local_10,__n);
decomp/Decompiled.c:48395:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:48436:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:48738:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [104];
decomp/Decompiled.c:48783:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [104];
decomp/Decompiled.c:49002:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:49031:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,local_10,__n);
decomp/Decompiled.c:49423:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [104];
decomp/Decompiled.c:49468:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_98 [104];
decomp/Decompiled.c:49710:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:49749:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:49788:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:50006:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:50040:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_78 [104];
decomp/Decompiled.c:50132:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:50170:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
  char local_88 [104];
decomp/Decompiled.c:50328:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:50355:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(&local_48,pcParm1,__n);
decomp/Decompiled.c:50499:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:50539:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:50579:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:50767:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:50817:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
  memcpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:62:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
char * strncat(char *__dest,char *__src,size_t __n)
decomp/Decompiled.c:148:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
size_t strlen(char *__s)
decomp/Decompiled.c:249:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
char * strncpy(char *__dest,char *__src,size_t __n)
decomp/Decompiled.c:2106:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:2140:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:2174:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:2234:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:2288:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:2339:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:2386:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:2424:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:2462:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:2557:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:2607:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:2651:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:2652:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:2687:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:2688:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:2721:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:2722:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:2768:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:2769:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_c8,local_20,__n);
decomp/Decompiled.c:2806:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:2807:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_c8,local_20,__n);
decomp/Decompiled.c:2851:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:2889:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:2978:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:3010:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:3042:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:3074:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:3156:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:3158:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:3196:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:3198:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:3236:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:3238:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:3282:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:3321:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:3414:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:3445:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:3531:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:3581:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:3679:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:3728:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:3771:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:3826:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:3853:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:3880:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:3927:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:3993:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:4033:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:4077:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:4111:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:4145:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:4277:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:4278:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_c8,local_18,__n);
decomp/Decompiled.c:4316:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:4317:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_c8,local_18,__n);
decomp/Decompiled.c:4366:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:4410:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:4495:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:4496:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:4538:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:4539:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:4591:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:4620:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:4737:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:4786:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:4831:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:4878:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:4916:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:4954:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:4996:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(__s);
decomp/Decompiled.c:5047:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(__s);
decomp/Decompiled.c:5110:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:5149:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:5185:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:5235:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:5237:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:5284:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:5286:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:5327:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:5329:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:5367:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:5368:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:5396:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:5397:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:5461:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_40,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:5463:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack144 + 1,local_40,__n,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:5512:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_40,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:5514:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack144 + 1,local_40,__n,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:5557:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:5598:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:5637:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:5708:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:5755:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:5796:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:5867:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:5868:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:5896:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:5897:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:5940:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:5967:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:6061:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6103:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6143:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6190:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:6191:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:6229:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:6230:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:6265:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:6266:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:6300:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:6325:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:6364:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6411:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6452:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6548:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6550:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6590:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6592:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6630:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6632:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6683:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6685:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack128 + 1,local_38,__n,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6727:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6729:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack128 + 1,local_38,__n,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:6771:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:6772:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:6805:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:6806:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:6845:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20);
decomp/Decompiled.c:6881:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20);
decomp/Decompiled.c:6912:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:6913:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:6939:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:6940:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:6966:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:6967:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:6993:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:6994:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:7027:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:7028:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:7061:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:7062:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:7106:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:7150:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:7191:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:7336:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:7371:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:7410:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:7411:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_58,local_18,__n);
decomp/Decompiled.c:7441:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:7442:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_58,local_18,__n);
decomp/Decompiled.c:7477:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:7478:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:7516:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:7517:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:7552:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:7553:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:7588:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:7589:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:7629:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:7630:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:7687:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:7726:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:7762:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:7831:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:7882:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:7929:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:7993:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:8032:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:8068:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:8128:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:8164:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:8200:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:8238:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:8239:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:8267:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:8268:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:8314:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:8369:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:8420:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:8473:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:8517:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:8561:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:8688:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:8689:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:8734:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:8735:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:8808:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:8809:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:8844:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:8845:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:8878:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:8879:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:8946:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:8999:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:9046:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:9096:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:9097:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:9135:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:9136:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:9171:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:9172:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:9207:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:9256:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:9344:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:9397:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:9444:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:9489:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:9520:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:9579:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:9581:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:9623:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:9625:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:9667:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:9669:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:9705:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:9706:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:9732:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:9733:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:9771:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:9815:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:9898:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:9930:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:10002:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10004:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10052:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10054:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10138:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:10170:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:10266:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:10293:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:10369:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10371:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10409:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10411:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10480:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10535:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10586:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10648:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_40,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10697:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_40,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10749:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:10776:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:10818:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10861:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10912:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10914:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10961:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:10963:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11004:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11006:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11043:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:11070:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:11132:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:11133:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:11179:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:11180:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:11341:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11390:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11433:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11555:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11557:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack128 + 1,local_30,__n,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11599:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11601:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack128 + 1,local_30,__n,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11662:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:11708:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:11751:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:11801:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11841:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11879:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11930:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:11972:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:12010:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:12011:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:12039:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:12040:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:12123:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(__s);
decomp/Decompiled.c:12159:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(__s);
decomp/Decompiled.c:12194:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:12195:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:12246:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:12247:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:12309:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:12343:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:12377:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:12424:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:12426:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:12466:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:12468:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:12506:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:12508:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:12559:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:12601:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:12678:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:12709:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:12800:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:12801:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:12827:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:12828:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:12911:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:12943:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:13014:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:13043:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:13123:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:13155:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:13248:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:13287:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:13323:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:13359:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:13386:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:13413:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:13454:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:13518:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:13560:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:13602:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:13646:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:13680:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:13728:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:13775:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:13816:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:14002:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:14040:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:14082:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:14116:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:14292:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:14293:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:14331:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:14332:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:14367:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:14368:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:14405:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:14406:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:14434:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:14435:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:14479:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28);
decomp/Decompiled.c:14480:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_d8,local_28,__n);
decomp/Decompiled.c:14524:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28);
decomp/Decompiled.c:14525:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_d8,local_28,__n);
decomp/Decompiled.c:14577:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:14578:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:14606:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:14607:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:14637:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:14683:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:14738:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(__s);
decomp/Decompiled.c:14774:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(__s);
decomp/Decompiled.c:14805:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:14832:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:14908:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:14944:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:14978:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:15025:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:15065:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:15105:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:15153:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:15197:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:15238:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:15279:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:15325:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:15382:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:15413:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:15444:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:15445:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:15490:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:15491:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:15554:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:15556:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:15603:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:15605:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:15646:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:15648:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:15691:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:15692:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:15727:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:15728:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:15761:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:15762:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:15809:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_18);
decomp/Decompiled.c:15852:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_18);
decomp/Decompiled.c:15905:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:15954:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:15997:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16035:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:16082:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:16156:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:16190:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:16246:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16302:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16398:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:16399:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:16433:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:16434:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:16468:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:16469:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:16566:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16568:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16615:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16617:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16658:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16660:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16696:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:16723:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:16772:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_40,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16774:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack144 + 1,local_40,__n,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16823:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_40,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16825:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack144 + 1,local_40,__n,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16875:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16919:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:16996:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:17025:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:17068:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:17095:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:17124:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:17125:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:17153:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:17154:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:17192:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:17236:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:17361:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:17393:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:17475:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:17476:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:17514:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:17515:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:17550:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:17551:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:17598:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:17642:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:17686:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:17738:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:17740:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:17778:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:17780:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:17816:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_10);
decomp/Decompiled.c:17844:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_10);
decomp/Decompiled.c:17898:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:17936:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:17982:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:17984:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:18024:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:18026:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:18064:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:18066:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:18117:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:18119:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack128 + 1,local_38,__n,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:18161:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:18163:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack128 + 1,local_38,__n,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:18220:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:18274:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:18366:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:18393:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:18520:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:18559:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:18712:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:18713:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:18760:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:18761:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:18805:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:18806:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:18848:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:18849:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:18882:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:18883:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:18916:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:18917:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:19068:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19121:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19168:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19216:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:19217:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:19250:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:19251:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:19286:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:19338:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:19408:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19448:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19489:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:19520:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:19551:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:19552:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:19603:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:19604:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:19670:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19672:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19712:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19714:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19752:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19754:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19790:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:19791:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:19817:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:19818:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:19860:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_40 = strlen(local_30,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19908:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_40 = strlen(local_30,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:19957:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:19958:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:19996:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:19997:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:20032:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:20033:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:20131:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:20132:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:20173:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:20174:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:20211:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:20245:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:20292:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:20294:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:20336:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:20338:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:20380:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:20382:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:20422:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:20453:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:20506:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:20545:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:20581:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:20671:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28);
decomp/Decompiled.c:20716:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28);
decomp/Decompiled.c:20751:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:20778:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:20805:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:20832:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:20866:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:20900:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:21000:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_30,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:21043:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_30,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:21097:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:21126:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:21152:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:21199:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:21266:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:21267:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:21307:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:21308:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:21345:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:21346:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:21388:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:21389:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:21422:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:21423:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:21456:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:21457:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:21493:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:21525:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:21566:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:21610:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:21651:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:21761:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:21763:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:21810:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:21812:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:21853:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:21855:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:21982:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22018:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22052:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22099:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22137:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22181:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22182:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:22220:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22221:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:22256:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22257:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:22422:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22423:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:22456:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22457:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:22495:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:22541:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:22641:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22642:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:22670:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22671:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:22704:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22740:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22774:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22817:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22818:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:22853:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22854:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:22887:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:22888:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:22948:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:22950:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23004:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23006:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23057:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23059:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23106:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23108:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23146:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23148:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23186:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23188:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23293:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23334:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23381:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23383:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23421:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23423:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23469:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23511:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23551:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23588:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:23613:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:23658:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30);
decomp/Decompiled.c:23708:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30);
decomp/Decompiled.c:23772:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:23773:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:23813:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:23814:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:23851:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:23852:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:23900:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23947:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:23988:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:24029:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:24061:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:24091:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(pcParm1);
decomp/Decompiled.c:24125:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(pcParm1);
decomp/Decompiled.c:24164:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:24205:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:24244:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:24354:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_40,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:24405:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_40,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:24442:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:24469:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:24513:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:24540:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:24585:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:24614:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:24654:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:24701:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:24742:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:24791:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_30 = strlen(local_18);
decomp/Decompiled.c:24834:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_30 = strlen(local_18);
decomp/Decompiled.c:24887:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:24889:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:24936:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:24938:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:24979:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:24981:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25028:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25030:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25068:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25070:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25108:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25110:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25189:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:25190:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:25223:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:25224:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:25309:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:25310:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_d8,local_18,__n);
decomp/Decompiled.c:25347:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:25348:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_d8,local_18,__n);
decomp/Decompiled.c:25441:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25483:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25523:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25576:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25620:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25671:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25673:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25720:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25722:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25763:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25765:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:25813:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:25814:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_c8,local_18,__n);
decomp/Decompiled.c:25852:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:25853:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_c8,local_18,__n);
decomp/Decompiled.c:25887:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:25888:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:25930:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:25931:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:26006:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:26045:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:26081:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:26169:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:26170:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:26196:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:26197:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:26234:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:26236:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:26274:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:26276:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:26329:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:26377:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:26422:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:26462:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:26514:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:26588:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:26636:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:26681:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:26719:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:26720:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:26748:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:26749:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:26786:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:26828:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:26868:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27005:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:27039:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:27074:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:27075:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:27101:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:27102:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:27139:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27141:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27179:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27181:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27225:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:27265:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:27305:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:27360:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27413:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27460:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27524:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_50 = strlen(local_48,*(undefined *)(auStack160 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27579:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_50 = strlen(local_48,*(undefined *)(auStack160 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27657:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27659:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27707:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27709:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27776:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27820:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27864:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:27906:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:27937:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:28029:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:28068:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:28104:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:28150:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:28194:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:28235:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:28285:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:28323:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:28361:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:28407:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:28408:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:28446:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:28447:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:28482:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:28483:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:28518:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:28519:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:28545:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:28546:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:28617:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:28663:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:28707:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:28764:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_48 = strlen(local_30,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:28812:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_48 = strlen(local_30,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:28863:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:28904:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:28942:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:28985:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:29019:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:29053:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:29103:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:29152:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:29195:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:29237:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:29238:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:29268:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:29269:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:29346:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:29380:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:29465:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:29495:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:29577:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:29630:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:29680:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:29728:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:29767:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:29806:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:29862:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_30,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:29864:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_30,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:29907:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_30,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:29909:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_30,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30016:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:30017:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:30065:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:30066:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:30200:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30247:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30288:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30332:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:30366:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:30416:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:30461:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:30526:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30566:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30603:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:30630:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:30657:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:30658:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:30684:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:30685:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:30736:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30792:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30845:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30894:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30934:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:30974:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:31092:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:31094:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:31144:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:31146:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:31195:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:31237:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:31289:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:31336:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:31375:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:31376:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:31402:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:31403:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:31429:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:31430:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:31456:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:31457:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:31484:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_10);
decomp/Decompiled.c:31511:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_10);
decomp/Decompiled.c:31553:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:31601:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:31649:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:31715:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:31756:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:31794:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:31881:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:31906:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:31956:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32008:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32076:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32078:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32119:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32121:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32168:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:32214:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:32257:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:32305:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:32344:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:32383:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:32428:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(__s);
decomp/Decompiled.c:32485:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(__s);
decomp/Decompiled.c:32612:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32665:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32712:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32823:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32825:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32872:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32874:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32915:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32917:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:32980:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:33024:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:33065:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:33124:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33175:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33222:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33271:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33311:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33351:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33389:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:33432:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:33535:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:33536:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:33566:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:33567:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:33601:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:33640:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:33680:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:33712:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:33750:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:33751:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:33784:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:33785:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:33818:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:33819:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:33868:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33917:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:33960:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34002:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:34003:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_58,local_18,__n);
decomp/Decompiled.c:34033:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:34034:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_58,local_18,__n);
decomp/Decompiled.c:34067:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:34101:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:34161:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34221:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34278:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34331:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34375:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34419:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34494:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:34495:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:34536:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:34537:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:34619:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34663:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34711:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:34750:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:34800:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34840:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:34893:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:34920:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:34996:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:35028:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:35074:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:35116:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:35160:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:35161:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:35199:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:35200:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:35235:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:35236:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:35303:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:35352:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:35397:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:35452:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:35453:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:35500:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:35501:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:35545:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:35546:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:35628:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:35668:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:35708:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:35791:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:35830:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:35866:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:35959:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:35960:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:35998:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:35999:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:36034:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:36035:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:36087:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:36088:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:36136:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:36137:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:36209:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_30,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:36254:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_30,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:36393:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:36422:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:36461:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:36507:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:36551:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:36606:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:36655:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:36698:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:36740:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:36741:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:36771:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:36772:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:36798:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:36799:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:36825:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:36826:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:36877:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:36913:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:36947:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:36994:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:37032:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:37143:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:37144:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:37170:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:37171:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:37250:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37252:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37293:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37295:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37335:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20);
decomp/Decompiled.c:37371:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20);
decomp/Decompiled.c:37470:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:37522:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:37578:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:37579:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:37605:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:37606:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:37657:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37659:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37713:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37715:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37766:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37768:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37815:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37817:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37855:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37857:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37895:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37897:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37947:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:37996:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:38039:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:38087:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:38125:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:38205:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:38241:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:38277:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:38320:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:38321:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:38354:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:38355:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:38388:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:38389:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:38538:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:38587:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:38630:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:38675:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:38676:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:38709:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:38710:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:38743:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:38744:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:38801:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_40,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:38852:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_40,*(undefined *)(auStack144 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:38901:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:38940:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:38979:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:38980:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_58,local_18,__n);
decomp/Decompiled.c:39010:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:39011:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_58,local_18,__n);
decomp/Decompiled.c:39037:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:39080:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:39146:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:39147:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:39188:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:39189:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:39266:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:39305:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:39341:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:39427:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:39456:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:39483:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:39510:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:39539:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:39568:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:39598:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(__s);
decomp/Decompiled.c:39627:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(__s);
decomp/Decompiled.c:39704:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:39748:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:39871:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:39873:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:39920:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:39922:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:39963:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:39965:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:40020:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:40022:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:40071:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:40073:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:40118:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:40120:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:40167:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:40169:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:40207:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:40209:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:40247:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:40249:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:40285:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:40286:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:40326:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:40327:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:40375:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:40402:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:40497:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:40522:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:40673:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:40674:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_d8,local_18,__n);
decomp/Decompiled.c:40711:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:40712:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_d8,local_18,__n);
decomp/Decompiled.c:40753:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:40788:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:40863:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:40864:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:40892:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:40893:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:41014:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:41016:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:41054:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:41056:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:41100:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:41139:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:41175:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:41226:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:41227:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:41268:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:41269:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:41303:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:41304:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:41330:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:41331:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:41418:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20);
decomp/Decompiled.c:41462:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20);
decomp/Decompiled.c:41510:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:41511:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:41549:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:41550:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:41585:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:41586:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:41636:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:41678:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:41714:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:41762:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:41817:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:41818:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:41844:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:41845:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:41887:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:41931:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:41975:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42069:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42118:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42161:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42210:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42212:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42250:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42252:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42290:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42292:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42331:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:42365:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:42412:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_30,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42457:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_30,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42527:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42529:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42578:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42580:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42625:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42627:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42677:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42726:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42769:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:42807:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:42856:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:42922:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:42961:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:42997:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:43072:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:43073:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_58,local_18,__n);
decomp/Decompiled.c:43103:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_18);
decomp/Decompiled.c:43104:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_58,local_18,__n);
decomp/Decompiled.c:43158:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:43198:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:43246:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:43287:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:43325:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:43368:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:43402:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:43436:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:43497:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:43498:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:43538:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:43539:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:43576:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:43577:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:43666:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:43715:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:43758:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:43812:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_30,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:43814:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_30,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:43857:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_30,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:43859:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_30,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:43915:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:43944:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:43994:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:43995:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:44028:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:44029:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:44062:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:44063:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:44106:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:44145:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:44198:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:44200:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:44247:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:44249:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:44290:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:44292:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:44328:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:44329:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:44375:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:44376:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:44494:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:44519:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(pcParm1);
decomp/Decompiled.c:44545:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:44572:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:44606:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:44607:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:44640:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:44641:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:44685:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:44729:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:44770:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:44820:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:44858:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:44919:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:44975:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45028:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45077:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:45078:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:45118:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:45119:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:45156:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:45157:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:45207:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45209:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack128 + 1,local_30,__n,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45251:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45253:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack128 + 1,local_30,__n,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45303:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45346:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45385:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:45386:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:45414:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:45415:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:45452:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45492:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45559:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45608:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45651:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:45689:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:45690:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:45716:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:45717:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:45820:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:45861:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:45899:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:46094:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_40 = strlen(local_38,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46143:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_40 = strlen(local_38,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46207:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46209:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46259:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46261:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46320:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46372:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46410:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:46464:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_18 = strlen(pcParm1);
decomp/Decompiled.c:46525:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:46526:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:46552:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:46553:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:46610:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46612:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46659:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46661:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46702:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46704:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:46747:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:46781:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:46815:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:46910:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(__s);
decomp/Decompiled.c:46960:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(__s);
decomp/Decompiled.c:47018:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(pcParm1);
decomp/Decompiled.c:47052:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(pcParm1);
decomp/Decompiled.c:47109:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:47149:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:47187:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:47239:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:47281:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:47343:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:47344:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:47382:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:47383:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:47418:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:47419:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:47473:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:47502:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:47548:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:47599:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:47646:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:47695:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:47735:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:47775:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:47820:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:47821:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:47854:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:47855:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:47922:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:47924:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:47973:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:47975:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:48020:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:48022:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:48066:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:48067:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:48101:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:48102:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:48136:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:48137:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:48181:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:48220:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:48256:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:48307:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:48354:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_28 = strlen(local_20,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:48394:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:48435:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:48503:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_18);
decomp/Decompiled.c:48533:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_18);
decomp/Decompiled.c:48633:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:48634:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:48664:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(__s);
decomp/Decompiled.c:48665:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,local_10,__n);
decomp/Decompiled.c:48691:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:48718:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:48763:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28);
decomp/Decompiled.c:48764:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_d8,local_28,__n);
decomp/Decompiled.c:48808:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28);
decomp/Decompiled.c:48809:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_d8,local_28,__n);
decomp/Decompiled.c:48858:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:48911:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:48958:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_38 = strlen(local_30,*(undefined *)(auStack128 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49001:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:49030:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:49076:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49078:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49127:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49129:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49174:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49176:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49214:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:49215:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:49243:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:49244:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_48,local_10,__n);
decomp/Decompiled.c:49284:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49286:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49333:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49335:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49376:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49378:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy(auStack112 + 1,local_28,__n,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49448:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28);
decomp/Decompiled.c:49493:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28);
decomp/Decompiled.c:49612:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:49613:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:49639:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:49640:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:49666:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:49667:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:49693:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:49694:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_48,pcParm1,__n);
decomp/Decompiled.c:49728:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:49767:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:49806:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:49879:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49930:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:49977:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar3 * 0x1ffffffffffffffe));
decomp/Decompiled.c:50022:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:50023:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:50056:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:50057:  [1] (buffer) strncat:
  Easily used incorrectly (e.g., incorrectly computing the correct maximum
  size to add) [MS-banned] (CWE-120). Consider strcat_s, strlcat, snprintf,
  or automatically resizing strings.
  strncat((char *)&local_b8,local_10,__n);
decomp/Decompiled.c:50152:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:50153:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_c8,local_20,__n);
decomp/Decompiled.c:50190:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_10);
decomp/Decompiled.c:50191:  [1] (buffer) strncpy:
  Easily used incorrectly; doesn't always \0-terminate or check for invalid
  pointers [MS-banned] (CWE-120).
  strncpy((char *)&local_c8,local_20,__n);
decomp/Decompiled.c:50241:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:50288:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  local_20 = strlen(local_18);
decomp/Decompiled.c:50327:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:50354:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(pcParm1);
decomp/Decompiled.c:50402:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:50450:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __maxlen = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:50497:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:50537:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:50577:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar1 * 0x1ffffffffffffffe));
decomp/Decompiled.c:50765:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));
decomp/Decompiled.c:50815:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
  __n = strlen(local_28,*(undefined *)(auStack112 + lVar2 * 0x1ffffffffffffffe));

ANALYSIS SUMMARY:

Hits = 1833
Lines analyzed = 51402 in approximately 3.68 seconds (13959 lines/second)
Physical Source Lines of Code (SLOC) = 43772
Hits@level = [0] 103 [1] 1368 [2] 458 [3]   2 [4]   5 [5]   0
Hits@level+ = [0+] 1936 [1+] 1833 [2+] 465 [3+]   7 [4+]   5 [5+]   0
Hits/KSLOC@level+ = [0+] 44.2292 [1+] 41.8761 [2+] 10.6232 [3+] 0.15992 [4+] 0.114228 [5+]   0
Minimum risk level = 1
Not every hit is necessarily a security vulnerability.
There may be other security vulnerabilities; review your code!
See 'Secure Programming HOWTO'
(https://dwheeler.com/secure-programs) for more information.
