Flawfinder version 2.0.8, (C) 2001-2017 David A. Wheeler.
Number of rules (primarily dangerous function names) in C/C++ ruleset: 223
CWE121_Stack_Based_Buffer_Overflow__CWE135_01.c:37:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_01.c:57:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_01.c:73:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_02.c:42:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_02.c:73:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_02.c:95:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_02.c:122:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_02.c:144:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_03.c:42:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_03.c:73:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_03.c:95:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_03.c:122:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_03.c:144:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_04.c:48:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_04.c:79:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_04.c:101:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_04.c:128:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_04.c:150:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_05.c:48:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_05.c:79:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_05.c:101:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_05.c:128:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_05.c:150:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_06.c:47:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_06.c:78:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_06.c:100:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_06.c:127:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_06.c:149:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_07.c:47:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_07.c:78:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_07.c:100:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_07.c:127:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_07.c:149:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_08.c:55:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_08.c:86:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_08.c:108:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_08.c:135:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_08.c:157:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_09.c:42:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_09.c:73:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_09.c:95:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_09.c:122:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_09.c:144:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_10.c:42:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_10.c:73:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_10.c:95:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_10.c:122:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_10.c:144:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_11.c:42:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_11.c:73:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_11.c:95:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_11.c:122:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_11.c:144:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_12.c:47:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_12.c:57:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_12.c:90:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_12.c:100:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_12.c:129:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_12.c:139:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_13.c:42:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_13.c:73:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_13.c:95:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_13.c:122:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_13.c:144:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_14.c:42:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_14.c:73:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_14.c:95:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_14.c:122:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_14.c:144:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_15.c:49:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_15.c:91:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_15.c:121:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_15.c:155:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_15.c:189:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_16.c:43:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_16.c:71:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_16.c:95:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_17.c:43:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_17.c:70:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_17.c:93:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c:41:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c:65:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c:85:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_21.c:38:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_21.c:77:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_21.c:102:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_21.c:127:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_22b.c:35:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_22b.c:64:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_22b.c:79:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_22b.c:94:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_31.c:40:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_31.c:64:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_31.c:84:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_32.c:45:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_32.c:74:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_32.c:99:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_34.c:47:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_34.c:72:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_34.c:93:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
            (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_41.c:33:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_41.c:58:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_41.c:79:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_42.c:43:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_42.c:69:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_42.c:91:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_44.c:33:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_44.c:61:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_44.c:83:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_45.c:38:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_45.c:65:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_45.c:88:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_51b.c:33:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_51b.c:49:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_51b.c:61:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_52c.c:33:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_52c.c:49:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_52c.c:61:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_53d.c:33:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_53d.c:49:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_53d.c:61:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_54e.c:33:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_54e.c:49:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_54e.c:61:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_61a.c:39:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_61a.c:60:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_61a.c:77:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_63b.c:34:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_63b.c:51:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_63b.c:64:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_64b.c:37:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_64b.c:57:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_64b.c:73:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_65b.c:33:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_65b.c:49:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_65b.c:61:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_66b.c:35:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_66b.c:52:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_66b.c:65:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c:39:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c:56:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c:69:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_68b.c:38:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_68b.c:55:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        (void)strcpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_68b.c:68:  [4] (buffer) wcscpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using a function version that stops copying at the end
  of the buffer.
        (void)wcscpy(dest, data);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_01.c:40:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_01.c:62:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_02.c:43:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_02.c:73:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_02.c:94:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_03.c:43:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_03.c:73:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_03.c:94:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_04.c:50:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_04.c:80:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_04.c:101:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_05.c:50:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_05.c:80:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_05.c:101:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_06.c:47:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_06.c:77:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_06.c:98:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_07.c:49:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_07.c:79:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_07.c:100:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_08.c:57:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_08.c:87:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_08.c:108:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_09.c:43:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_09.c:73:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_09.c:94:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_10.c:43:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_10.c:73:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_10.c:94:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_11.c:43:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_11.c:73:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_11.c:94:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_12.c:50:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_12.c:83:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_13.c:43:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_13.c:73:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_13.c:94:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_14.c:43:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_14.c:73:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_14.c:94:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_15.c:49:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_15.c:80:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_15.c:107:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_16.c:44:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_16.c:70:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_17.c:44:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_17.c:70:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_18.c:42:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_18.c:66:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_31.c:43:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_31.c:69:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_32.c:48:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_32.c:79:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c:50:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c:77:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
            strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_41.c:33:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_41.c:59:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_44.c:33:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_44.c:63:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_45.c:37:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_45.c:66:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_51b.c:35:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_51b.c:50:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_52c.c:35:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_52c.c:50:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_53d.c:35:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_53d.c:50:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_54e.c:35:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_54e.c:50:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_63b.c:34:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_63b.c:50:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_64b.c:37:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_64b.c:56:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_65b.c:33:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_65b.c:48:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_66b.c:35:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_66b.c:51:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_67b.c:39:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_67b.c:55:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_68b.c:39:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_68b.c:55:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120). Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy
  easily misused).
        strcpy(data, source);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.c:260:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c:414:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_03.c:414:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_04.c:420:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_05.c:420:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c:419:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_07.c:419:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c:427:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c:414:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_10.c:414:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_11.c:414:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_12.c:417:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_13.c:414:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_14.c:414:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_15.c:464:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_16.c:284:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_17.c:281:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c:272:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_21.c:392:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c:293:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c:271:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c:286:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c:280:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c:275:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_42.c:278:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_44.c:279:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c:284:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_51a.c:214:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_52a.c:214:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_53a.c:214:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_54a.c:214:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_61a.c:155:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c:214:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_64a.c:214:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_65a.c:219:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_66a.c:221:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_67a.c:225:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_68a.c:221:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c:154:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_02.c:265:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_03.c:265:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_04.c:271:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c:271:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_06.c:270:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c:270:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c:278:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_09.c:265:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_10.c:265:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_11.c:265:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_12.c:268:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_13.c:265:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_14.c:265:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_15.c:315:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_16.c:178:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_17.c:175:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_18.c:166:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c:243:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_22a.c:144:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c:165:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_32.c:180:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_34.c:174:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c:169:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c:172:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_44.c:173:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c:178:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_51a.c:108:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_52a.c:108:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_53a.c:108:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_54a.c:108:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61a.c:135:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_63a.c:108:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_64a.c:108:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_65a.c:113:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_66a.c:115:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_67a.c:119:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_68a.c:115:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.c:130:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_02.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_03.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_04.c:236:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_05.c:236:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_06.c:235:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_07.c:235:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_08.c:243:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_09.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_10.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_11.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_12.c:233:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_13.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_14.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_15.c:280:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_16.c:154:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_17.c:151:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_18.c:142:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_21.c:208:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_22a.c:109:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_31.c:141:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_32.c:156:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c:150:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_41.c:145:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_42.c:148:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_44.c:149:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_45.c:154:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_51a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_52a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_53a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_54a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_61a.c:133:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_63a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_64a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_65a.c:89:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_66a.c:91:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_67a.c:95:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_68a.c:91:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_01.c:130:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_02.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_03.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_04.c:236:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_05.c:236:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_06.c:235:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_07.c:235:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_08.c:243:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_09.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_10.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_11.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_12.c:233:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_13.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_14.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_15.c:280:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_16.c:154:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_17.c:151:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_18.c:142:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_21.c:208:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_22a.c:109:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_31.c:141:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_32.c:156:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_34.c:150:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_41.c:145:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_42.c:148:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_44.c:149:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_45.c:154:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_51a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_52a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_53a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_54a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_61a.c:133:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_63a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_64a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_65a.c:89:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66a.c:91:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_67a.c:95:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_large_68a.c:91:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_01.c:286:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_02.c:453:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_03.c:453:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_04.c:459:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_05.c:459:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_06.c:458:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_07.c:458:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_08.c:466:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_09.c:453:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_10.c:453:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_11.c:453:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_12.c:456:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_13.c:453:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_14.c:453:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_15.c:503:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_16.c:310:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_17.c:307:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_18.c:298:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_21.c:431:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c:332:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_31.c:297:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_32.c:312:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_34.c:306:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c:301:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_42.c:304:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_44.c:305:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_45.c:310:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_51a.c:240:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_52a.c:240:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_53a.c:240:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_54a.c:240:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_61a.c:155:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_63a.c:240:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64a.c:240:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_65a.c:245:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_66a.c:247:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_67a.c:251:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_68a.c:247:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_01.c:130:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_02.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_03.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_04.c:236:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_05.c:236:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_06.c:235:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_07.c:235:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_08.c:243:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_09.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_10.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_11.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_12.c:233:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_13.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_14.c:230:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_15.c:280:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_16.c:154:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_17.c:151:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_18.c:142:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_21.c:208:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_22a.c:109:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_31.c:141:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_32.c:156:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_34.c:150:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_41.c:145:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_42.c:148:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_44.c:149:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_45.c:154:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_51a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_52a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_53a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_54a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_61a.c:133:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_63a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_64a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_65a.c:89:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_66a.c:91:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_67a.c:95:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_rand_68a.c:91:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_01.c:80:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_02.c:114:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_03.c:114:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_04.c:121:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_05.c:121:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_06.c:118:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_07.c:120:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_08.c:128:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_09.c:114:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_10.c:114:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_11.c:114:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_12.c:97:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_13.c:114:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_14.c:114:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_15.c:127:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_16.c:88:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_17.c:88:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_18.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_31.c:87:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_32.c:97:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_34.c:95:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c:90:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_44.c:93:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_45.c:96:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_51a.c:68:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_52a.c:68:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_53a.c:68:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54a.c:68:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_63a.c:67:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64a.c:67:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_65a.c:71:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_66a.c:72:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67a.c:76:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_68a.c:73:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_01.c:72:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_02.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_03.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_04.c:109:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_05.c:109:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_06.c:106:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_07.c:108:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_08.c:116:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_09.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_10.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_11.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_12.c:89:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_13.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_14.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_15.c:115:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_16.c:80:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c:80:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_18.c:76:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c:79:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_32.c:89:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c:87:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c:82:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_44.c:85:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_45.c:88:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_51a.c:68:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_52a.c:68:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_53a.c:68:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_54a.c:68:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_63a.c:67:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64a.c:67:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_65a.c:71:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_66a.c:72:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_67a.c:76:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_68a.c:73:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.c:72:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_02.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_03.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_04.c:109:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_05.c:109:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_06.c:106:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_07.c:108:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_08.c:116:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_09.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_10.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_11.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_12.c:89:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_13.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_14.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_15.c:115:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_16.c:80:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_17.c:80:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_18.c:76:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_31.c:79:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_32.c:89:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c:87:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c:82:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_44.c:85:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_45.c:88:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_51a.c:68:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_52a.c:68:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_53a.c:68:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_54a.c:68:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_63a.c:67:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_64a.c:67:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_65a.c:71:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_66a.c:72:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_67a.c:76:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_68a.c:73:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_01.c:96:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_02.c:170:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_03.c:170:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_04.c:176:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_05.c:176:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_06.c:175:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_07.c:175:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_08.c:183:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_09.c:170:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_10.c:170:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_11.c:170:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_12.c:163:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_13.c:170:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_14.c:170:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_15.c:220:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_16.c:120:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_17.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c:108:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_21.c:162:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_22a.c:109:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_31.c:107:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_32.c:122:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_34.c:116:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_41.c:111:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_42.c:114:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_44.c:115:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_45.c:120:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_51a.c:85:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_52a.c:85:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_53a.c:85:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_54a.c:85:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_61a.c:100:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c:85:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_64a.c:85:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c:90:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c:92:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_67a.c:96:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c:92:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_01.c:85:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_02.c:118:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_03.c:118:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_04.c:125:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_05.c:125:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_06.c:122:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_07.c:124:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_08.c:132:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_09.c:118:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_10.c:118:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_11.c:118:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_12.c:106:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_13.c:118:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_14.c:118:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_15.c:131:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_16.c:93:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_17.c:93:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_18.c:89:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_31.c:92:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_32.c:102:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c:100:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_41.c:95:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_44.c:98:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_45.c:101:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_51a.c:81:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_52a.c:81:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_53a.c:81:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_54a.c:81:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_63a.c:80:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_64a.c:80:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_65a.c:84:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_66a.c:85:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_67a.c:89:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_68a.c:86:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_01.c:85:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_02.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_03.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_04.c:123:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c:123:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_06.c:122:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_07.c:122:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_08.c:130:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_09.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_10.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_11.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c:120:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_13.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_14.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c:130:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_16.c:94:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c:94:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c:90:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c:85:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_03.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_04.c:123:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_05.c:123:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_06.c:122:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_07.c:122:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_08.c:130:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_09.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_10.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_11.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c:120:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_14.c:117:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c:130:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c:94:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c:94:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_18.c:90:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
    srand( (unsigned)time(NULL) );
main_linux.c:15:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.
	srand( (unsigned)time(NULL) );
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.c:57:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.c:91:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.c:174:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.c:208:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c:59:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c:93:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c:152:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c:186:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c:245:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c:279:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_03.c:59:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_03.c:93:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_03.c:152:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_03.c:186:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_03.c:245:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_03.c:279:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_04.c:65:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_04.c:99:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_04.c:158:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_04.c:192:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_04.c:251:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_04.c:285:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_05.c:65:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_05.c:99:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_05.c:158:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_05.c:192:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_05.c:251:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_05.c:285:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c:64:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c:98:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c:157:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c:191:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c:250:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c:284:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_07.c:64:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_07.c:98:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_07.c:157:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_07.c:191:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_07.c:250:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_07.c:284:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c:72:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c:106:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c:165:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c:199:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c:258:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c:292:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c:59:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c:93:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c:152:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c:186:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c:245:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c:279:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_10.c:59:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_10.c:93:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_10.c:152:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_10.c:186:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_10.c:245:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_10.c:279:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_11.c:59:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_11.c:93:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_11.c:152:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_11.c:186:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_11.c:245:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_11.c:279:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_12.c:59:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_12.c:93:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_12.c:181:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_12.c:215:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_12.c:240:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_12.c:274:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_13.c:59:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_13.c:93:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_13.c:152:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_13.c:186:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_13.c:245:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_13.c:279:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_14.c:59:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_14.c:93:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_14.c:152:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_14.c:186:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_14.c:245:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_14.c:279:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_15.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_15.c:94:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_15.c:165:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_15.c:199:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_15.c:265:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_15.c:299:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_16.c:59:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_16.c:93:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_16.c:154:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_16.c:188:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_17.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_17.c:94:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_17.c:154:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_17.c:188:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c:59:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c:93:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c:150:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c:184:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_21.c:86:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_21.c:120:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_21.c:191:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_21.c:225:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_21.c:282:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_21.c:316:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c:62:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c:96:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c:139:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c:173:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c:207:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_22a.c:241:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c:57:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c:91:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c:182:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c:216:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c:61:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c:95:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c:196:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c:230:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c:64:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c:98:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c:191:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c:225:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c:80:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c:114:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c:206:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c:240:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_42.c:54:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_42.c:88:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_42.c:183:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_42.c:217:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_44.c:82:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_44.c:116:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_44.c:211:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_44.c:245:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c:85:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c:119:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c:215:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c:249:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_51a.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_51a.c:94:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_51a.c:145:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_51a.c:179:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_52a.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_52a.c:94:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_52a.c:145:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_52a.c:179:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_53a.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_53a.c:94:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_53a.c:145:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_53a.c:179:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_54a.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_54a.c:94:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_54a.c:145:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_54a.c:179:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_61b.c:54:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_61b.c:88:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_61b.c:129:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_61b.c:163:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c:94:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c:145:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c:179:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_64a.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_64a.c:94:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_64a.c:145:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_64a.c:179:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_65a.c:62:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_65a.c:96:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_65a.c:150:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_65a.c:184:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_66a.c:61:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_66a.c:95:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_66a.c:151:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_66a.c:185:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_67a.c:66:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_67a.c:100:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_67a.c:155:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_67a.c:189:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_68a.c:64:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_68a.c:98:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_68a.c:151:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_68a.c:185:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c:30:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c:35:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c:104:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c:109:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_02.c:32:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_02.c:37:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_02.c:82:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_02.c:87:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_02.c:132:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_02.c:137:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_03.c:32:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_03.c:37:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_03.c:82:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_03.c:87:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_03.c:132:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_03.c:137:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_04.c:38:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_04.c:43:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_04.c:88:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_04.c:93:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_04.c:138:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_04.c:143:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c:38:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c:43:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c:88:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c:93:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c:138:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c:143:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_06.c:37:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_06.c:42:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_06.c:87:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_06.c:92:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_06.c:137:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_06.c:142:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c:37:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c:42:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c:87:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c:92:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c:137:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_07.c:142:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c:45:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c:50:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c:95:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c:100:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c:145:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_08.c:150:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_09.c:32:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_09.c:37:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_09.c:82:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_09.c:87:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_09.c:132:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_09.c:137:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_10.c:32:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_10.c:37:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_10.c:82:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_10.c:87:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_10.c:132:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_10.c:137:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_11.c:32:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_11.c:37:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_11.c:82:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_11.c:87:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_11.c:132:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_11.c:137:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_12.c:32:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_12.c:37:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_12.c:111:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_12.c:116:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_12.c:127:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_12.c:132:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_13.c:32:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_13.c:37:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_13.c:82:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_13.c:87:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_13.c:132:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_13.c:137:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_14.c:32:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_14.c:37:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_14.c:82:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_14.c:87:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_14.c:132:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_14.c:137:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_15.c:33:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_15.c:38:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_15.c:95:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_15.c:100:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_15.c:152:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_15.c:157:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_16.c:32:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_16.c:37:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_16.c:84:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_16.c:89:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_17.c:33:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_17.c:38:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_17.c:84:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_17.c:89:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_18.c:32:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_18.c:37:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_18.c:80:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_18.c:85:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c:59:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c:64:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c:121:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c:126:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c:169:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c:174:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_22a.c:35:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_22a.c:40:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_22a.c:69:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_22a.c:74:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_22a.c:94:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_22a.c:99:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c:30:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c:35:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c:112:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_31.c:117:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_32.c:34:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_32.c:39:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_32.c:126:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_32.c:131:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_34.c:37:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_34.c:42:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_34.c:121:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_34.c:126:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c:53:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c:58:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c:136:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c:141:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c:32:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c:113:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c:118:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_44.c:55:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_44.c:60:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_44.c:141:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_44.c:146:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c:58:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c:63:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c:145:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c:150:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_51a.c:33:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_51a.c:38:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_51a.c:75:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_51a.c:80:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_52a.c:33:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_52a.c:38:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_52a.c:75:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_52a.c:80:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_53a.c:33:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_53a.c:38:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_53a.c:75:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_53a.c:80:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_54a.c:33:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_54a.c:38:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_54a.c:75:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_54a.c:80:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61b.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61b.c:32:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61b.c:59:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_61b.c:64:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_63a.c:33:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_63a.c:38:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_63a.c:75:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_63a.c:80:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_64a.c:33:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_64a.c:38:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_64a.c:75:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_64a.c:80:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_65a.c:35:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_65a.c:40:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_65a.c:80:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_65a.c:85:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_66a.c:34:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_66a.c:39:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_66a.c:81:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_66a.c:86:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_67a.c:39:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_67a.c:44:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_67a.c:85:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_67a.c:90:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_68a.c:37:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_68a.c:42:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_68a.c:81:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_68a.c:86:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_01.c:58:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_01.c:100:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_01.c:188:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_01.c:230:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_02.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_02.c:102:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_02.c:166:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_02.c:208:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_02.c:272:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_02.c:314:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_03.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_03.c:102:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_03.c:166:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_03.c:208:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_03.c:272:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_03.c:314:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_04.c:66:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_04.c:108:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_04.c:172:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_04.c:214:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_04.c:278:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_04.c:320:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_05.c:66:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_05.c:108:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_05.c:172:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_05.c:214:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_05.c:278:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_05.c:320:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_06.c:65:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_06.c:107:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_06.c:171:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_06.c:213:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_06.c:277:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_06.c:319:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_07.c:65:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_07.c:107:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_07.c:171:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_07.c:213:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_07.c:277:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_07.c:319:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_08.c:73:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_08.c:115:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_08.c:179:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_08.c:221:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_08.c:285:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_08.c:327:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_09.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_09.c:102:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_09.c:166:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_09.c:208:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_09.c:272:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_09.c:314:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_10.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_10.c:102:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_10.c:166:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_10.c:208:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_10.c:272:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_10.c:314:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_11.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_11.c:102:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_11.c:166:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_11.c:208:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_11.c:272:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_11.c:314:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_12.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_12.c:102:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_12.c:195:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_12.c:237:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_12.c:267:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_12.c:309:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_13.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_13.c:102:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_13.c:166:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_13.c:208:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_13.c:272:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_13.c:314:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_14.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_14.c:102:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_14.c:166:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_14.c:208:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_14.c:272:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_14.c:314:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_15.c:61:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_15.c:103:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_15.c:179:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_15.c:221:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_15.c:292:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_15.c:334:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_16.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_16.c:102:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_16.c:168:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_16.c:210:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_17.c:61:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_17.c:103:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_17.c:168:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_17.c:210:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_18.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_18.c:102:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_18.c:164:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_18.c:206:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_21.c:87:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_21.c:129:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_21.c:205:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_21.c:247:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_21.c:309:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_21.c:351:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c:63:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c:105:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c:153:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c:195:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c:234:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c:276:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_31.c:58:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_31.c:100:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_31.c:196:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_31.c:238:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_32.c:62:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_32.c:104:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_32.c:210:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_32.c:252:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
                data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_34.c:65:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_34.c:107:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_34.c:205:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_34.c:247:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c:81:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c:123:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c:220:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c:262:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_42.c:55:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_42.c:97:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_42.c:197:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_42.c:239:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_44.c:83:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_44.c:125:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_44.c:225:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_44.c:267:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_45.c:86:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_45.c:128:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_45.c:229:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_45.c:271:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_51a.c:61:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_51a.c:103:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_51a.c:159:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_51a.c:201:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_52a.c:61:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_52a.c:103:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_52a.c:159:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_52a.c:201:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_53a.c:61:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_53a.c:103:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_53a.c:159:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_53a.c:201:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_54a.c:61:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_54a.c:103:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_54a.c:159:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_54a.c:201:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_61b.c:55:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_61b.c:97:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_61b.c:143:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_61b.c:185:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_63a.c:61:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_63a.c:103:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_63a.c:159:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_63a.c:201:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64a.c:61:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64a.c:103:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64a.c:159:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_64a.c:201:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_65a.c:63:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_65a.c:105:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_65a.c:164:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_65a.c:206:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_66a.c:62:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_66a.c:104:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_66a.c:165:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_66a.c:207:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_67a.c:67:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_67a.c:109:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_67a.c:169:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_67a.c:211:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_68a.c:65:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_68a.c:107:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_68a.c:165:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char inputBuffer[CHAR_ARRAY_SIZE];
CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_68a.c:207:  [2] (integer) atoi:
  Unless checked, the resulting number can exceed the expected range
  (CWE-190). If source untrusted, check both minimum and maximum, even if the
  input had no minus sign (large numbers can roll over into negative number;
  consider saving to an unsigned value if that is intended).
            data = atoi(inputBuffer);
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_01.c:30:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_01.c:49:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_02.c:33:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_02.c:60:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_02.c:78:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_03.c:33:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_03.c:60:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_03.c:78:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_04.c:40:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_04.c:67:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_04.c:85:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_05.c:40:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_05.c:67:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_05.c:85:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_06.c:37:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_06.c:64:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_06.c:82:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_07.c:39:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_07.c:66:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_07.c:84:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_08.c:47:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_08.c:74:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_08.c:92:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_09.c:33:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_09.c:60:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_09.c:78:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_10.c:33:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_10.c:60:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_10.c:78:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_11.c:33:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_11.c:60:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_11.c:78:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_12.c:38:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_12.c:66:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_13.c:33:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_13.c:60:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_13.c:78:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_14.c:33:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_14.c:60:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_14.c:78:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_15.c:39:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_15.c:67:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_15.c:91:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_16.c:34:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_16.c:57:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c:34:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c:57:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_18.c:32:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_18.c:53:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c:33:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_31.c:56:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_32.c:38:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_32.c:66:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c:40:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c:64:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c:26:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c:49:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_44.c:26:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_44.c:53:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_45.c:30:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_45.c:56:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_51b.c:28:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_51b.c:43:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_52c.c:28:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_52c.c:43:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_53d.c:28:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_53d.c:43:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_54e.c:28:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_54e.c:43:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_63b.c:27:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_63b.c:43:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c:30:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c:49:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_65b.c:26:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_65b.c:41:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_66b.c:28:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_66b.c:44:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_67b.c:32:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_67b.c:48:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_68b.c:32:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_68b.c:48:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(data, source, 10*sizeof(int));
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_01.c:38:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_01.c:60:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_02.c:41:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_02.c:71:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_02.c:92:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_03.c:41:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_03.c:71:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_03.c:92:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_04.c:48:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_04.c:78:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_04.c:99:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_05.c:48:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_05.c:78:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_05.c:99:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_06.c:45:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_06.c:75:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_06.c:96:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_07.c:47:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_07.c:77:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_07.c:98:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_08.c:55:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_08.c:85:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_08.c:106:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_09.c:41:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_09.c:71:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_09.c:92:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_10.c:41:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_10.c:71:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_10.c:92:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_11.c:41:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_11.c:71:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_11.c:92:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_12.c:48:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_12.c:81:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_13.c:41:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_13.c:71:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_13.c:92:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_14.c:41:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_14.c:71:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_14.c:92:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_15.c:47:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_15.c:78:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_15.c:105:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_16.c:42:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_16.c:68:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_17.c:42:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_17.c:68:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_18.c:40:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_18.c:64:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_31.c:41:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_31.c:67:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_32.c:46:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_32.c:77:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c:48:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c:75:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
            char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_41.c:31:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_41.c:57:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_44.c:31:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_44.c:61:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_45.c:35:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_45.c:64:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_51b.c:33:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_51b.c:48:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_52c.c:33:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_52c.c:48:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_53d.c:33:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_53d.c:48:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_54e.c:33:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_54e.c:48:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_63b.c:32:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_63b.c:48:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_64b.c:35:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_64b.c:54:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_65b.c:31:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_65b.c:46:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_66a.c:34:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char * dataArray[5];
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_66a.c:56:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char * dataArray[5];
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_66b.c:33:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_66b.c:49:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_67b.c:37:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_67b.c:53:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_68b.c:37:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_68b.c:53:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
        char source[10+1] = SRC_STRING;
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_01.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_01.c:42:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_02.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_02.c:44:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_03.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_03.c:44:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_04.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_04.c:50:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c:50:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_06.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_06.c:49:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_07.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_07.c:49:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_08.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_08.c:57:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_09.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_09.c:44:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_10.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_10.c:44:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_11.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_11.c:44:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c:44:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_13.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_13.c:44:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_14.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_14.c:44:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c:45:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_16.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_16.c:44:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c:45:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
            memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c:44:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
        memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_02.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_03.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_04.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_05.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_06.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_07.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_08.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_09.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_10.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_11.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_13.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_14.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_18.c:27:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
    char charFirst[16];
CWE121_Stack_Based_Buffer_Overflow__CWE135_01.c:35:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_01.c:55:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_01.c:71:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_02.c:40:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_02.c:71:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_02.c:93:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_02.c:120:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_02.c:142:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_03.c:40:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_03.c:71:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_03.c:93:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_03.c:120:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_03.c:142:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_04.c:46:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_04.c:77:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_04.c:99:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_04.c:126:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_04.c:148:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_05.c:46:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_05.c:77:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_05.c:99:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_05.c:126:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_05.c:148:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_06.c:45:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_06.c:76:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_06.c:98:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_06.c:125:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_06.c:147:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_07.c:45:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_07.c:76:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_07.c:98:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_07.c:125:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_07.c:147:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_08.c:53:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_08.c:84:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_08.c:106:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_08.c:133:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_08.c:155:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_09.c:40:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_09.c:71:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_09.c:93:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_09.c:120:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_09.c:142:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_10.c:40:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_10.c:71:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_10.c:93:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_10.c:120:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_10.c:142:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_11.c:40:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_11.c:71:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_11.c:93:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_11.c:120:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_11.c:142:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_12.c:45:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_12.c:55:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_12.c:88:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_12.c:98:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_12.c:127:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_12.c:137:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_13.c:40:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_13.c:71:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_13.c:93:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_13.c:120:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_13.c:142:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_14.c:40:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_14.c:71:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_14.c:93:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_14.c:120:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_14.c:142:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_15.c:47:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_15.c:89:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_15.c:119:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_15.c:153:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_15.c:187:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_16.c:41:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_16.c:69:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_16.c:93:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_17.c:41:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_17.c:68:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_17.c:91:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c:39:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c:63:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c:83:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_21.c:36:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_21.c:75:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_21.c:100:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_21.c:125:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_22b.c:33:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_22b.c:62:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_22b.c:77:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_22b.c:92:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_31.c:38:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_31.c:62:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_31.c:82:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_32.c:43:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_32.c:72:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_32.c:97:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_34.c:45:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_34.c:70:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_34.c:91:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
            size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_41.c:31:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_41.c:56:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_41.c:77:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_42.c:41:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_42.c:67:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_42.c:89:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_44.c:31:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_44.c:59:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_44.c:81:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_45.c:36:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_45.c:63:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_45.c:86:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_51b.c:31:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_51b.c:47:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_51b.c:59:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_52c.c:31:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_52c.c:47:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_52c.c:59:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_53d.c:31:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_53d.c:47:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_53d.c:59:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_54e.c:31:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_54e.c:47:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_54e.c:59:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_61a.c:37:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_61a.c:58:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_61a.c:75:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_63b.c:32:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_63b.c:49:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_63b.c:62:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_64b.c:35:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_64b.c:55:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_64b.c:71:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_65b.c:31:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_65b.c:47:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_65b.c:59:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_66b.c:33:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_66b.c:50:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_66b.c:63:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c:37:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c:54:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c:67:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_68b.c:36:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_68b.c:53:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = strlen((char *)data);
CWE121_Stack_Based_Buffer_Overflow__CWE135_68b.c:66:  [1] (buffer) wcslen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
        size_t dataLen = wcslen((wchar_t *)data);

ANALYSIS SUMMARY:

Hits = 1580
Lines analyzed = 96680 in approximately 5.87 seconds (16465 lines/second)
Physical Source Lines of Code (SLOC) = 84405
Hits@level = [0] 276 [1] 145 [2] 770 [3] 439 [4] 226 [5]   0
Hits@level+ = [0+] 1856 [1+] 1580 [2+] 1435 [3+] 665 [4+] 226 [5+]   0
Hits/KSLOC@level+ = [0+] 21.9892 [1+] 18.7193 [2+] 17.0014 [3+] 7.87868 [4+] 2.67757 [5+]   0
Minimum risk level = 1
Not every hit is necessarily a security vulnerability.
There may be other security vulnerabilities; review your code!
See 'Secure Programming HOWTO'
(https://dwheeler.com/secure-programs) for more information.
